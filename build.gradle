plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}


group = 'de.esempe'
version = ''

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// Web-Services
	implementation 'org.springframework.boot:spring-boot-starter-web'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	// Datenbank
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'
	// Validierung
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	
	// für OpenAPI: Web-Root "demo" -->
	// JSON: http://localhost:8080/demo/v3/api-docs
	// YAML: http://localhost:8080/demov3/api-docs.yaml
	// Swagger UI
	//http://localhost:8080/demo/swagger-ui/index.html
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.6.0'
	
	
	// ****************************************************************************
	// Nicht-Spring
	
	// Guava
	compileOnly 'com.google.guava:guava:31.1-jre'
	// Json Web Token (JWT)
	implementation 'com.auth0:java-jwt:3.18.3'
	
	// ****************************************************************************
	// Alles fürs Testen
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.security:spring-security-test'
	
	
	// implementation 'org.springframework.session:spring-session-core'
}

tasks.named('test') {
	useJUnitPlatform()
}
